buildscript{
	ext {
		springBootVer = '2.4.5'
		springDependencyMgmtVer = '1.0.11'
		springLoadedVer = '1.2.8'
		nodePluginVer = '1.3.1'
		querydslVer = '4.4.0'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVer}"
		classpath "io.spring.gradle:dependency-management-plugin:${springDependencyMgmtVer}.RELEASE"
		classpath "org.springframework:springloaded:${springLoadedVer}.RELEASE"
		classpath "com.github.node-gradle:gradle-node-plugin:3.1.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}
apply plugin: 'com.github.node-gradle.node'

group = 'com.diary'
version = '1.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

node {
	download = true
	version = '14.17.0'
	// Set the work directory where node_modules should be located
	nodeModulesDir = file("${project.projectDir}/../frontend")
}

task webpack(type: NpmTask, dependsOn: 'npmInstall') {
	args = ['run','build']
}

processResources.dependsOn 'webpack'

configurations {
	providedRuntime
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'

	implementation("com.auth0:java-jwt:3.10.3")

	implementation("io.springfox:springfox-swagger2:3.0.0")
	implementation("io.springfox:springfox-swagger-ui:3.0.0")

	implementation("com.google.guava:guava:29.0-jre")

	annotationProcessor("com.querydsl:querydsl-apt:${querydslVer}:jpa")
	implementation("com.querydsl:querydsl-jpa:${querydslVer}")
	implementation("com.querydsl:querydsl-apt:${querydslVer}")

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
